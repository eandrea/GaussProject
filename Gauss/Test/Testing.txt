            //double[,] A = new double[,] { { 1, 2, -1 }, { 2, -1, 3 }, { -1, 3, 1 } };

            //List<double> b = new List<double>();
            //b.Add(4);
            //b.Add(3);
            //b.Add(6);

            //double[,] A = new double[,] { { 1, -2, 5 }, { 1, -1, 3 }, { 3, -6, -1 } };

            //List<double> b = new List<double>();
            //b.Add(9);
            //b.Add(2);
            //b.Add(25);

            //double[,] A = new double[,] { { Math.Pow(10, -17), 1 }, { 1, 1 } };

            //List<double> b = new List<double>();
            //b.Add(1);
            //b.Add(2);

            //double[,] A = new double[,] { { 16, 136 }, { 136, 1496} };

            //List<double> b = new List<double>();
            //b.Add(2576);
            //b.Add(24104);

            //double[,] A = new double[,] { { 3, 2, 1 }, { 2, 4, 1 }, { 3, 1, 2 } };

            //List<double> b = new List<double>();
            //b.Add(180);
            //b.Add(205);
            //b.Add(175);

            //double[,] A = new double[,] { { 16, 136 }, { 136, 1496 } };

            //List<double> b = new List<double>();
            //b.Add(114.4);
            //b.Add(1278.2);

            //double[,] A = new double[,] { { 7, 28 }, { 28, 196 } };

            //List<double> b = new List<double>();
            //b.Add(4850);
            //b.Add(16230);

            //double[,] A = new double[,] { { -8, 4 , 0 }, { 3, 2, 0 }, { 1, 0, 0 } };

            //List<double> b = new List<double>();
            //b.Add(16);
            //b.Add(14);
            //b.Add(5);

            //double[,] A = new double[,] { { 1, 2, 1, -1 }, { 2, 1, -3, 1 }, { 1, 1, 1, 1 }, { -1, 1, -1, 2 } };

            //List<double> b = new List<double>();
            //b.Add(5);
            //b.Add(4);
            //b.Add(3);
            //b.Add(1);

            //List<double> x = GaussMethod(A, b);

            //int i = 1;
            //foreach (double item in x)
            //{
            //    Console.WriteLine("x{0}= {1}", i, item);
            //    ++i;
            //}